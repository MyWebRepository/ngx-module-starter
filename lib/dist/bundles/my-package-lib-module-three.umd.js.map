{"version":3,"file":"my-package-lib-module-three.umd.js.map","sources":["ng://my-package/lib/module-three/src/services/data.service.ts","ng://my-package/lib/module-three/src/components/three.component.ts","ng://my-package/lib/module-three/src/pipes/square.pipe.ts","ng://my-package/lib/module-three/src/three.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/**\n * The service DataService provides a method returning a number\n */\n@Injectable()\nexport class DataService {\n  /**\n   * The method getData returns a generic observable\n   */\n  public getData(): Observable<number> {\n    return Observable.of(15);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from '../services';\n\n/**\n * The ThreeComponent renders a value and its square.\n */\n@Component({\n  selector: 'my-component-3',\n  template: `<div>\n  <div id=\"data-container\">Value: {{value}} -- Squared: {{value | square}} </div>\n</div>`,\n  styles: []\n})\nexport class ThreeComponent implements OnInit {\n  public value: number;\n\n  constructor(private dataService: DataService) {}\n\n  ngOnInit(): void {\n    this.dataService.getData().subscribe((result: number) => {\n      this.value = result;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * The SquarePipe converts a number to its square\n */\n@Pipe({name: 'square'})\nexport class SquarePipe implements PipeTransform {\n  transform(value: number): number {\n    const val: number = parseFloat(String(value));\n\n    return Math.pow(val, 2);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ThreeComponent } from './components';\nimport { DataService } from './services';\nimport { SquarePipe} from './pipes';\n\n/**\n * The module registers component, service and pipe created in the module\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [ThreeComponent, SquarePipe],\n  exports: [ThreeComponent, SquarePipe],\n  providers: [DataService]\n})\nexport class ThreeModule {}\n"],"names":["Observable","Injectable","Component","Pipe","NgModule","CommonModule"],"mappings":";;;;;;;;;;AAAA;;;;;;;;;;QAWS,6BAAO;;;;;gBACZ,OAAOA,eAAU,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;;oBAN5BC,eAAU;;0BANX;;;;;;;;;;;;ACAA;;;;QAiBE,wBAAoB,WAAwB;YAAxB,gBAAW,GAAX,WAAW,CAAa;SAAI;;;;QAEhD,iCAAQ;;;YAAR;gBAAA,iBAIC;gBAHC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,UAAC,MAAc;oBAClD,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC;iBACrB,CAAC,CAAC;aACJ;;oBAhBFC,cAAS,SAAC;wBACT,QAAQ,EAAE,gBAAgB;wBAC1B,QAAQ,EAAE,oGAEL;wBACL,MAAM,EAAE,EAAE;qBACX;;;;;wBAXQ,WAAW;;;6BAFpB;;;;;;;;;;;;ACAA;;;;;;;;;;QAOE,8BAAS;;;;YAAT,UAAU,KAAa;gBACrB,qBAAM,GAAG,GAAW,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBAE9C,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;aACzB;;oBANFC,SAAI,SAAC,EAAC,IAAI,EAAE,QAAQ,EAAC;;yBALtB;;;;;;;;;;;;ACAA;;;;;;;oBASCC,aAAQ,SAAC;wBACR,OAAO,EAAE,CAACC,mBAAY,CAAC;wBACvB,YAAY,EAAE,CAAC,cAAc,EAAE,UAAU,CAAC;wBAC1C,OAAO,EAAE,CAAC,cAAc,EAAE,UAAU,CAAC;wBACrC,SAAS,EAAE,CAAC,WAAW,CAAC;qBACzB;;0BAdD;;;;;;;;;;;;;;;;;;;;;;;;;;"}
